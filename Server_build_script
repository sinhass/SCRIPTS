
I#!/bin/bash
# 
# 
# Author Siddhartha S Sinha
# Date : 10-28-2015
#
# 
GetYesNo()      {
        _ANSWER=
        if  [ $# -eq 0 ]; then
        echo "Usage: GetYesNo message" 1>&2
        exit 1
        fi

while :
do
        if [ "`echo -n`" = "-n" ]; then
                echo "$@\c"
                else
                        echo -n "$@"
        fi

        read _ANSWER
        case "$_ANSWER" in
                [yY] | yes | YES | Yes)         return 0 ;;
                [nN] | no  | NO  | No )         return 1 ;;
                * ) echo "Please Enter y or n."          ;;
        esac
     tput clear
done
}

#
#


ADD_NETWORK_INFO () {

touch /bin/sidbuildscript.txt >/dev/null 2>&1

#
#
echo -n "Type the new hostname of this server: "
read HOST_NAME
hostname $HOSTNAME
echo -n "Please type the IP Address: "
read IP_ADDR
echo -n "Please type the SUBNET MASK (Ex. 255.255.252.0): "
read NET_MASK
echo -n "Please type the Gateway Address (Ex. 10.200.108.1): "
read GATE_WAY

# PREDEFINED PARAMETERS
#
#
DNS1="10.200.104.59"
DNS2="10.95.4.120"
DNS3="10.95.4.119"
#
MAC_ADDR=`ifconfig eth1|grep HW|awk '{print $NF}'`
UUID_NAME=`uuidgen`
DOMAIN="bluecoat.com es.bluecoat.com packeteer.com cacheflow.com internal.cacheflow.com"

}

MAKE_NETWORK_CHANGE () {

#
#
# Now I will configure /etc/sysconfig/network-scripts/ifcfg-eth0
#

sed -i -re "s/^(HWADDR)=(.*)/\1=$MAC_ADDR/" /etc/sysconfig/network-scripts/ifcfg-eth0
sed -i -re "s/^(UUID)=(.*)/\1=$UUID_NAME/" /etc/sysconfig/network-scripts/ifcfg-eth0
sed -i -re "s/^(ONBOOT)=(.*)/\1=yes/"  /etc/sysconfig/network-scripts/ifcfg-eth0
sed -i -re "s/^(IPADDR)=(.*)/\1=$IP_ADDR/" /etc/sysconfig/network-scripts/ifcfg-eth0
sed -i -re "s/^(GATEWAY)=(.*)/\1=$GATE_WAY/" /etc/sysconfig/network-scripts/ifcfg-eth0
sed -i -re "s/^(NETMASK)=(.*)/\1=$NET_MASK/" /etc/sysconfig/network-scripts/ifcfg-eth0
sed -i -re "s/^(NM_CONTROLLED)=(.*)/\1=no/" /etc/sysconfig/network-scripts/ifcfg-eth0

#
#
# Now I will fix the Ethernet Device File /etc/udev/rules.d/70-persistent-net.rules
#

perl -i.bk -ne 'print unless /# PCI/../"eth0/' /etc/udev/rules.d/70-persistent-net.rules
perl -pi -e 's/eth1/eth0/' /etc/udev/rules.d/70-persistent-net.rules

#
# Now I will setup the hostname of the server
#

sed -i -re "s/^(NETWORKING)=(.*)/\1=yes/" /etc/sysconfig/network
sed -i -re "s/^(HOSTNAME)=(.*)/\1=$HOST_NAME/" /etc/sysconfig/network

#
# Now I will change /etc/resolv.conf file
#
mv /etc/resolv.conf /etc/resolv.conf.OLD
echo "search bluecoat.com es.bluecoat.com packeteer.com cacheflow.com internal.cacheflow.com
nameserver  10.200.104.59
nameserver 10.2.2.14
nameserver 10.95.4.120" >/etc/resolv.conf

#
#Now I will fix /etc/hosts file
#

perl -i~ -pe 's/localhost\s\K.*//' /etc/hosts

}

FIX_SSH_KEYS () {
#
#Now I will remove existing old ssh keys and create new ssh keys as well as host keys
#
rm -rf /etc/ssh/ssh_host_*
service sshd restart >/dev/null 2>&1
#

mv -f /root/.ssh/id_rsa /root/.ssh/id_rsa.OLD
mv -f /root/.ssh/id_rsa.pub /root/.ssh/id_rsa.pub.OLD
#
ssh-keygen -b 2048 -t rsa -f /root/.ssh/`hostname`_id_rsa -q -N ""

}

MAKE_INSTALL_SSL_CERT () {

#
# Now I will create the SSL certificate
#
openssl req -nodes -newkey rsa:2048 -keyout /etc/pki/tls/private/ca.key -out /etc/pki/tls/private/ca.csr  -subj "/C=US/ST=California/L=Sunnyvale/O=Blue Coat Syatems Inc/OU=ITO/CN=`hostname`.bluecoat.com"
#
openssl x509 -req -days 3650 -in /etc/pki/tls/private/ca.csr -signkey /etc/pki/tls/private/ca.key -out /etc/pki/tls/certs/ca.crt

I
# Now I will install the new keys in /etc/httpd/conf.d/ssl.conf
#

sed -i -re 's/(private)\/(.*)/\1\/ca.key/' /etc/httpd/conf.d/ssl.conf
sed -i -re 's/(certs)\/(.*)/\1\/ca.crt/' /etc/httpd/conf.d/ssl.conf

}
#

clear
#
if [ -e /bin/sidbuildscript.txt ]; then
	echo  -e "\033[1;31mYou had run this script before. Running this script for second time not permitted.\033[1;0m"

	exit 1

else

	echo  -e "\033[7;1;5;31mThis script will only run once. So keep all information ready.\033[1;0m"

	ADD_NETWORK_INFO

  	if GetYesNo "Last chance to make any correction. Remember you can run this script only once. Do you want to continue ? [y/n]"

	  then
		echo "Making necessary network changed based on your input"

		MAKE_NETWORK_CHANGE

		echo "Now generating new ssh host and ssh keys for root user"

		FIX_SSH_KEYS

		echo "Now generating self signed certificate and updating Apache Configuration file"

		MAKE_INSTALL_SSL_CERT

		echo "Everything completed. Now reboot the server and verify settings once server reboots."
	 else 
		echo "Rerun this scripts again."

	
  fi
fi

